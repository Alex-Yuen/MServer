// 系统模块 协议定义

////////////////////////////////////////////////////////////////////////////////

table TestSubMsgLite
{
    b1:bool;
    i1:long;
    s:string;
    i2:long;
    b2:bool;
    d1:double;
    i3:int;
}

// 用于简单协议效率测试
table TestLite
{
    b1:bool;
    i1:long;
    s:string;
    i2:long;
    b2:bool;
    d1:double;
    i3:int;

    msg:TestSubMsgLite;
}

table TestSubMsgBase
{
    d1:double;
    d2:double;
    f1:float;
    f2:float;
    i1:int;
    i2:int;
    i641:long;
    i642:long;
    b1:bool;
    b2:bool;
    s1:string;
    s2:string;
    by1:[byte];
    by2:[byte];
    ui1:uint;
    ui2:uint;
    ui641:ulong;
    ui642:ulong;
    f321:uint; // fixed32 flatbuffers没这种类型，仅仅是为了和protobuf的字段对齐
    f322:uint; // fixed32 flatbuffers没这种类型，仅仅是为了和protobuf的字段对齐
    f641:ulong;
    f642:ulong;
}

// 用于复杂协议校验
table TestBase
{
    d1:double;
    d2:double;
    f1:float;
    f2:float;
    i1:int;
    i2:int;
    i641:long;
    i642:long;
    b1:bool;
    b2:bool;
    s1:string;
    s2:string;
    by1:[byte];
    by2:[byte];
    ui1:uint;
    ui2:uint;
    ui641:ulong;
    ui642:ulong;
    f321:uint; // fixed32 flatbuffers没这种类型，仅仅是为了和protobuf的字段对齐
    f322:uint; // fixed32 flatbuffers没这种类型，仅仅是为了和protobuf的字段对齐
    f641:ulong;
    f642:ulong;

    msg1:TestSubMsgBase;
    i_list:[int];
    msg_list:[TestSubMsgBase];

    index:int; // 索引
    context:string; // 目前用来测试socket效率，分包等情况
}
////////////////////////////////////////////////////////////////////////////////

/* 服务器注册 */
table SSRegister
{
    name:string;         // 服务器名字
    session:int;         // 服务器session id
    timestamp:int;       // 时间戳
    auth:string;         // 认证字符串
    clt_cmd:[int];       // 该服务器处理的客户端指令
    srv_cmd:[int];       // 该服务器处理的服务器指令
    rpc_cmd:[string];    // 该服务器处理的rpc指令
}

/* 服务器心跳 */
struct SSBeat
{
    response:bool;
}

/* 热更 */
table SSHotFix
{
    module:[string]; // 需要热更的模块
}
